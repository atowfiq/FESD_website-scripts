/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2017-07-28 17:42:54 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class BandstructureChart_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=ISO-8859-1\">\r\n");
      out.write("<title>Bandstructure</title>\r\n");
      out.write("\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write(".main{\r\n");
      out.write("margin-top:-40px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write(".modal .modal-body {\r\n");
      out.write("    max-height: 800px;\r\n");
      out.write("    overflow-y: auto;\r\n");
      out.write("}\r\n");
      out.write(".modal {\r\n");
      out.write("  text-align: center;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("@media screen and (min-width: 768px) {\r\n");
      out.write("  .modal:before {\r\n");
      out.write("    content: \" \";\r\n");
      out.write("    display: inline-block;\r\n");
      out.write("    height: 100%;\r\n");
      out.write("    vertical-align: middle;\r\n");
      out.write("  }\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".modal-dialog {\r\n");
      out.write("  display: inline-block;\r\n");
      out.write("  text-align: center;\r\n");
      out.write("  vertical-align: middle;\r\n");
      out.write("}\r\n");
      out.write("#BandstructureTable td\r\n");
      out.write("{\r\n");
      out.write("\tpadding-top: 5px ;\r\n");
      out.write("\tpadding-left:10px; ;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("    <script type=\"text/javascript\">\r\n");
      out.write("    var currentCompoundId;\r\n");
      out.write("    $(document).ready(function(){\r\n");
      out.write("    \t\r\n");
      out.write("    \t$(\"#CompoundElements\").change(function() {\r\n");
      out.write("    \t\r\n");
      out.write("    \t\tSetOrbitalValue($(this).val());\r\n");
      out.write("\r\n");
      out.write("    \t});\r\n");
      out.write("    \t\r\n");
      out.write("    \t\r\n");
      out.write("    \t\r\n");
      out.write("    });\r\n");
      out.write("    \r\n");
      out.write("    function SetOrbitalValue(orbitalValue)\r\n");
      out.write("    {\r\n");
      out.write("    \tvar orbitals = orbitalValue.replace(/^[\\s,]+|[\\s,]+$/g, '').split(',');\r\n");
      out.write("\t\t\r\n");
      out.write("    \t\r\n");
      out.write("\t\t $(\"#Orbitals\").html(''); \r\n");
      out.write("\t        $(\"#Orbitals\").append($(\"<option></option>\").val(\"None\").html(\"None\"));\r\n");
      out.write("\t\t  \t \r\n");
      out.write("\t\t $.each(orbitals, function (key, value) {\r\n");
      out.write("\t  \t         $(\"#Orbitals\").append($(\"<option></option>\").val(value).html(value));\r\n");
      out.write("\t  \t       });\r\n");
      out.write("    \t\r\n");
      out.write("    }\r\n");
      out.write("      function drawChart(bands,orbitalWeight) {  \r\n");
      out.write("    \t//  $(\"#Bands\").append($(\"<option></option>\").val('All').html('All'));\r\n");
      out.write("     \t\r\n");
      out.write("     \t  \r\n");
      out.write("     \t       drawBandChart(bands,orbitalWeight);\r\n");
      out.write("     \t  \r\n");
      out.write("          }\r\n");
      out.write("      \r\n");
      out.write("      \t  function drawBandChart(bands,orbitalWeight)\r\n");
      out.write("      \t  {\r\n");
      out.write("      \t\t\r\n");
      out.write("       \t  \r\n");
      out.write("      \t  BandChart = document.getElementById('BandChart');\r\n");
      out.write("      \t  Plotly.purge(BandChart);\r\n");
      out.write("  \t\t\r\n");
      out.write("      \t  var data =[];\r\n");
      out.write("      \t  var dx=[];\r\n");
      out.write("      \t  var w=[];\r\n");
      out.write("    \t  for(var i=0;i<bands[0].Energy.split(\", \").length;i++)\r\n");
      out.write("    \t  {       \t  dx.push(i);\r\n");
      out.write("    \t  \t\t\t  w.push(0);\r\n");
      out.write("    \t  }\r\n");
      out.write("    \t  for(var l=0;l<bands.length;l++)\r\n");
      out.write("      \t\t{\r\n");
      out.write("      \t\t  \r\n");
      out.write("      \t\t  var yval= bands[l].Energy.split(\", \");\r\n");
      out.write("      \t\t  var orbitalWeightVal=[];\r\n");
      out.write("      \t\t  if(orbitalWeight.length>0)\r\n");
      out.write("      \t\t  \torbitalWeightVal =orbitalWeight[l].split(\", \");\r\n");
      out.write("      \t\t // data.push({x:dx,y:yval,error_y: orbitalWeightVal});\r\n");
      out.write("      \t\t  data.push({x:dx,\r\n");
      out.write("     \t\t\t  y:yval,\r\n");
      out.write("     \t\t\t  type: 'scatter',                    // set the chart type\r\n");
      out.write("    \t\t      mode: 'lines',   \r\n");
      out.write("    \t\t      line: {                             // set the width of the line.\r\n");
      out.write("    \t\t         width: 1\r\n");
      out.write("    \t\t      },\r\n");
      out.write("    \t\t      \r\n");
      out.write("    \t\t      error_y: {\r\n");
      out.write("    \t\t        array: orbitalWeightVal.length==0?w:orbitalWeightVal,\r\n");
      out.write("    \t\t        thickness: 0.5,                   // set the thickness of the error bars\r\n");
      out.write("    \t\t        width: 0\r\n");
      out.write("    \t\t      }\r\n");
      out.write("     \t\t  \r\n");
      out.write("     \t\t  \r\n");
      out.write("     \t\t  });\r\n");
      out.write("     \t  \r\n");
      out.write("      \t\t}\r\n");
      out.write("      \t  \r\n");
      out.write("      \t  \r\n");
      out.write("      \t  /* [{\r\n");
      out.write("      \t      x: [1, 2, 3, 4, 5],\r\n");
      out.write("      \t      y: [1, 2, 4, 8, 16],\r\n");
      out.write("      \t  \t},{\r\n");
      out.write("      \t      x: [1, 2, 3, 4, 5],\r\n");
      out.write("      \t      y: [2, 4, 6, 8, 16],\r\n");
      out.write("      \t  \t}]*/\r\n");
      out.write("\r\n");
      out.write("      \t var layout = {\r\n");
      out.write("       \t\t\t  title: 'Bandstructure ' + Compound.Formula,\r\n");
      out.write("       \t\t\t \r\n");
      out.write("       \t\t\t  yaxis: {\r\n");
      out.write("       \t\t\t    range: [-10, 10],\r\n");
      out.write("       \t\t\t    autorange: false\r\n");
      out.write("       \t\t\t  },\r\n");
      out.write("       \t\t\t  \r\n");
      out.write("       \t\t\t};\r\n");
      out.write("      \t  Plotly.plot( BandChart,data, layout );\r\n");
      out.write("      \t  }\r\n");
      out.write("      \t  \r\n");
      out.write("      \t  function drawChartSingleBand(index,bands,orbitalValue)\r\n");
      out.write("      \t  {\r\n");
      out.write("      \t\t  \r\n");
      out.write("      \t\t \r\n");
      out.write("      \t\t BandChart = document.getElementById('BandChart');\r\n");
      out.write("      \t\t Plotly.purge(BandChart);\r\n");
      out.write("      \t\t\r\n");
      out.write("      \t\t var data =[];\r\n");
      out.write("         \t  var dx=[];\r\n");
      out.write("         \t  for(var i=0;i<bands[index].Energy.split(\", \").length;i++)\r\n");
      out.write("         \t\t  dx.push(i);\r\n");
      out.write("         \t \r\n");
      out.write("         \tvar weight= orbitalValue.split(\", \");\r\n");
      out.write("         \t\r\n");
      out.write("         \t\r\n");
      out.write("         \t// data.push({x:dx,y:bands[index].Energy.split(\", \")});\r\n");
      out.write("         \t  data.push({x:dx,\r\n");
      out.write("         \t\t\t  y:bands[index].Energy.split(\", \"),\r\n");
      out.write("         \t\t\t  type: 'scatter',                    // set the chart type\r\n");
      out.write("        \t\t      mode: 'lines',   \r\n");
      out.write("        \t\t      line: {                             // set the width of the line.\r\n");
      out.write("        \t\t         width: 1\r\n");
      out.write("        \t\t      },\r\n");
      out.write("        \t\t      \r\n");
      out.write("        \t\t      error_y: {\r\n");
      out.write("        \t\t        array: orbitalWeight,\r\n");
      out.write("        \t\t        thickness: 0.5,                   // set the thickness of the error bars\r\n");
      out.write("        \t\t        width: 0\r\n");
      out.write("        \t\t      }\r\n");
      out.write("         \t\t  \r\n");
      out.write("         \t\t  \r\n");
      out.write("         \t\t  });\r\n");
      out.write("         \t  \r\n");
      out.write("       \r\n");
      out.write("\r\n");
      out.write("         \t  Plotly.plot( BandChart,data, { \r\n");
      out.write("         \t      margin: { t: 0 } } );\r\n");
      out.write(" \r\n");
      out.write("      \t\t  \r\n");
      out.write("      \t\t  \r\n");
      out.write("      \t  }\r\n");
      out.write("      \t\r\n");
      out.write("      \t\r\n");
      out.write("      \t  \r\n");
      out.write("      \t  \r\n");
      out.write("      \tfunction GetBandstructures(compoundid)\r\n");
      out.write("      \t{\r\n");
      out.write("      \t\tif(compoundid)\r\n");
      out.write("      \t\t\tcurrentCompoundId = compoundid;\r\n");
      out.write("      \t\t\r\n");
      out.write("      \t\t\r\n");
      out.write("      \t\tvar eminBC= $(\"#EminBC\").val(),emaxBC=$(\"#EmaxBC\").val();\r\n");
      out.write("      \t\t$.get('BandStructureServlet', {\r\n");
      out.write("      \t\t\tEmin: eminBC.length==0?-10:eminBC,\r\n");
      out.write("      \t\t\tEmax: emaxBC.length==0?10:emaxBC,\r\n");
      out.write("      \t\t\telement:$(\"#CompoundElements option:selected\").text(),\r\n");
      out.write("      \t\t\torbital:$(\"#Orbitals\").val(),\r\n");
      out.write("      \t\t\tid:currentCompoundId \r\n");
      out.write("      \t\t\t }, function(data) { \r\n");
      out.write("      \t\t\t\t// $(\"#CompoundElements\").html(''); \r\n");
      out.write("      \t\t\t//\t    $(\"#CompoundElements\").append($(\"<option></option>\").val(\"None\").html(\"None\"));\r\n");
      out.write("      \t\t\t  \t    \r\n");
      out.write("      \t\t\t\t\tif(data.CompoundElementOrbitals.length>0)\r\n");
      out.write("      \t\t\t  \t    {\r\n");
      out.write("      \t\t\t  \t    \t$(\"#CompoundElements\").html('');\r\n");
      out.write("      \t\t\t  \t    \t\r\n");
      out.write("      \t\t\t  \t    \t\r\n");
      out.write("      \t\t\t  \t    \tSetOrbitalValue(data.CompoundElementOrbitals[0].Orbital);\r\n");
      out.write("      \t\t\t  \t    \t$.each(data.CompoundElementOrbitals, function (key, value) {\r\n");
      out.write("      \t\t\t  \t     \t   $(\"#CompoundElements\").append($(\"<option></option>\").val(value.Orbital).html(value.Element));\r\n");
      out.write("      \t\t\t  \t       });\r\n");
      out.write("      \t\t\t  \t    \t\r\n");
      out.write("      \t\t\t  \t    }\r\n");
      out.write("      \t\t     \t  drawChart(data.Bands,data.OrbitalWeight);\r\n");
      out.write("      \t\t     \t  \r\n");
      out.write("\r\n");
      out.write("      \t\t});      \t\t\r\n");
      out.write("      \t}\r\n");
      out.write("     \r\n");
      out.write("  \t\r\n");
      out.write("    </script>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<div  id=\"Viewer\"  class=\"modal fade bs-example-modal-lg\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myLargeModalLabel\" style=\"width:100%\">\r\n");
      out.write("    <div class=\"modal-dialog modal-lg\">\r\n");
      out.write("     \r\n");
      out.write("      <!-- Modal content-->\r\n");
      out.write("      \r\n");
      out.write("       \r\n");
      out.write("      <div class=\"modal-content\">\r\n");
      out.write("        <div class=\"modal-header\">\r\n");
      out.write("          <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n");
      out.write("          <h4 class=\"modal-title\" id=\"CompoundFormulaName\"></h4>\r\n");
      out.write("          \r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"modal-body\">\r\n");
      out.write("    <div style=\"text-align: center;\">\r\n");
      out.write("    <table id=\"BandstructureTable\" >\r\n");
      out.write("    <tr>\r\n");
      out.write("\t    <td>\r\n");
      out.write("\t    \t<label>Emin:</label>\r\n");
      out.write("\t    </td>\r\n");
      out.write("\t    <td>\r\n");
      out.write("\t    \t<label>Emax:</label>\r\n");
      out.write("\t    </td>\r\n");
      out.write("\t    <td>\r\n");
      out.write("\t     <label  class=\"control-label \">Element </label>\r\n");
      out.write("    \t</td>\r\n");
      out.write("    \t<td>\r\n");
      out.write("    \t \r\n");
      out.write("\t\t<label  class=\"control-label \">Orbital</label>\r\n");
      out.write("    \t</td>\r\n");
      out.write("    </tr>\r\n");
      out.write("    <tr>\r\n");
      out.write("    <td>\r\n");
      out.write("   \t\t<input id=\"EminBC\" style=\"width:100px;\"  class=\"form-control\"  value=\"-10\">\r\n");
      out.write("\t</td>\r\n");
      out.write("\r\n");
      out.write("\t<td>\r\n");
      out.write("\t<input id=\"EmaxBC\" style=\"width:100px;\"  class=\"form-control\"  value=\"10\">\r\n");
      out.write("\t</td>\r\n");
      out.write("\t<td>\r\n");
      out.write("\t <select style=\"width: 100px; \" class=\"form-control\"   id=\"CompoundElements\">\r\n");
      out.write("\t\t\t\t\t<option value=\"None\">None</option>\t\t\r\n");
      out.write("\t\t</select>\r\n");
      out.write("\t</td>\r\n");
      out.write("\t<td>\r\n");
      out.write("\t <select style=\"width: 150px; \" class=\"form-control\"   id=\"Orbitals\">\r\n");
      out.write("\t\t\t<option value=\"None\">None</option>\r\n");
      out.write("\t\t</select>\r\n");
      out.write("\t</td>\r\n");
      out.write("\t<td>\r\n");
      out.write("\t<button style=\"width:100px;\" class=\"btn btn-secondary\" onclick=\"GetBandstructures()\">Get </button>\r\n");
      out.write("\t\t\r\n");
      out.write("\t</td>\r\n");
      out.write("\t\r\n");
      out.write("\t</tr>\r\n");
      out.write("\t</table>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t\r\n");
      out.write("   <div id=\"BandChart\" style=\"width: 900px; height: 500px\"></div>\r\n");
      out.write("   \r\n");
      out.write("   \r\n");
      out.write("\r\n");
      out.write("<div id=\"ViewerContent\"  style=\"display: none;\"> <img src=\"\" id=\"imagepreview\" style=\"padding: 5px; width: 800px; height: 600px;\" ></div>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"modal-footer\">\r\n");
      out.write("          <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">Close</button>\r\n");
      out.write("        </div>\r\n");
      out.write("      </div>\r\n");
      out.write("      \r\n");
      out.write("    </div>\r\n");
      out.write("  </div>\r\n");
      out.write("  \r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
