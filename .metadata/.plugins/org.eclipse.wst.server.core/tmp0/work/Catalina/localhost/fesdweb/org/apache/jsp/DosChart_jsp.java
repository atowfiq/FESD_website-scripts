/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2017-07-31 17:38:46 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class DosChart_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=ISO-8859-1\">\r\n");
      out.write("<title>Dos</title>\r\n");
      out.write("<script src=\"https://cdn.plot.ly/plotly-latest.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write(" <script type=\"text/javascript\">\r\n");
      out.write(" \r\n");
      out.write(" \tfunction drawDosChart(dos)\r\n");
      out.write("\t  {\r\n");
      out.write("\t\t\r\n");
      out.write("\t  \r\n");
      out.write("\t  dosChart = document.getElementById('DosChart');\r\n");
      out.write("\t  Plotly.purge(DosChart);\r\n");
      out.write("\t\r\n");
      out.write("\t  var data =[];\r\n");
      out.write("\t \r\n");
      out.write("\t  var energy = dos.Energy.split(\", \");\r\n");
      out.write("\t var dtotal = dos.TotalDos.split(\", \");\r\n");
      out.write("\t  data.push({x:energy,\r\n");
      out.write("\t\t  y: dtotal,\r\n");
      out.write("\t\t  type: 'scatter',                    // set the chart type\r\n");
      out.write("\t      mode: 'lines',   \r\n");
      out.write("\t      line: {                             // set the width of the line.\r\n");
      out.write("\t         width: 1\r\n");
      out.write("\t      },\r\n");
      out.write("\t      name:\"'Total Dos'\",\r\n");
      out.write("\t  \r\n");
      out.write("\t  \r\n");
      out.write("\t  });\r\n");
      out.write("\t  \r\n");
      out.write("\t\r\n");
      out.write("\t  for(var i=0;i<dos.PartialValue.length;i++)\r\n");
      out.write("\t  {\r\n");
      out.write("\t\t  data.push({x:energy,\r\n");
      out.write("\t\t\t  y: dos.PartialValue[i].PartialDosValue.split(', '),\r\n");
      out.write("\t\t\t  type: 'scatter',                    // set the chart type\r\n");
      out.write("\t\t      mode: 'lines',   \r\n");
      out.write("\t\t      line: {                             // set the width of the line.\r\n");
      out.write("\t\t         width: 1\r\n");
      out.write("\t\t      },\r\n");
      out.write("\t\t      name:dos.PartialValue[i].Element+'-f',\r\n");
      out.write("\t\t  \r\n");
      out.write("\t\t  \r\n");
      out.write("\t\t  });\r\n");
      out.write("\t\t  \r\n");
      out.write("\t\t  \r\n");
      out.write("\t  }\r\n");
      out.write("\t\r\n");
      out.write("\t var layout = {\r\n");
      out.write("\t\t\t  title: 'Dos ' ,\r\n");
      out.write("\t\t\t};\r\n");
      out.write("\t  Plotly.plot( dosChart ,data, layout );\r\n");
      out.write("\t  }\r\n");
      out.write("\t  \r\n");
      out.write("\r\n");
      out.write(" \r\n");
      out.write(" var currentCompoundId;\r\n");
      out.write("     \tfunction GetDos(compoundid)\r\n");
      out.write("      \t{\r\n");
      out.write("     \t\t$('#DosViewer').modal('show');\r\n");
      out.write("     \t\tif(compoundid)\r\n");
      out.write("      \t\t{\r\n");
      out.write("      \t\t\tif(!currentCompoundId)\r\n");
      out.write("      \t\t\t\tcurrentCompoundId = compoundid;\r\n");
      out.write("      \t\t\telse if(currentCompoundId!=compoundid)\r\n");
      out.write("      \t\t\t{\r\n");
      out.write("      \t\t\t\tcurrentCompoundId = compoundid;\r\n");
      out.write("    \t\t\t  \t \r\n");
      out.write("      \t\t\t}\r\n");
      out.write("      \t\t\t\r\n");
      out.write("      \t\t}\r\n");
      out.write("      \t\t$('#dataStatus').show();\r\n");
      out.write("      //\t\tvar eminBC= $(\"#EminBC\").val(),emaxBC=$(\"#EmaxBC\").val();\r\n");
      out.write("      \t\t$.get('DosServlet', {\r\n");
      out.write("      \t//\t\tEmin: eminBC.length==0?-10:eminBC,\r\n");
      out.write("      \t\t//\tEmax: emaxBC.length==0?10:emaxBC,\r\n");
      out.write("      \t\t\t//element:$(\"#CompoundElements option:selected\").text(),\r\n");
      out.write("      \t\t//\torbital:$(\"#Orbitals\").val(),\r\n");
      out.write("      \t\t\tid:currentCompoundId \r\n");
      out.write("      \t\t\t }, function(dos) { \r\n");
      out.write("      \t\t\t\t $('#dataStatus').hide();\r\n");
      out.write("      \t\t\t\t\t\r\n");
      out.write("      \t\t\t  \tdrawDosChart(dos);\r\n");
      out.write("      \t\t     \t  \r\n");
      out.write("\r\n");
      out.write("      \t\t});      \t\t\r\n");
      out.write("      \t}\r\n");
      out.write("     \r\n");
      out.write("  \t\r\n");
      out.write("    </script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<div  id=\"DosViewer\"  class=\"modal fade bs-example-modal-lg\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myLargeModalLabel\" style=\"width:100%\">\r\n");
      out.write("    <div class=\"modal-dialog modal-lg\">\r\n");
      out.write("   \r\n");
      out.write("      <div class=\"modal-content\">\r\n");
      out.write("        <div class=\"modal-header\">\r\n");
      out.write("          <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n");
      out.write("          <h4 class=\"modal-title\" id=\"CompoundFormulaName\"></h4>\r\n");
      out.write("          \r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"modal-body\">\r\n");
      out.write("    <div style=\"text-align: center;\">\r\n");
      out.write("    <table id=\"DosstructureTable\" >\r\n");
      out.write("   <tr>\r\n");
      out.write("\t<td >\r\n");
      out.write("\t<span id=\"dosdataStatus\" style=\"display: none;\"> Getting Data...</span>\r\n");
      out.write("\t</td>\r\n");
      out.write("\t</tr>\r\n");
      out.write("\t</table>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t\r\n");
      out.write("   <div id=\"DosChart\" style=\"width: 900px; height: 500px\"></div>\r\n");
      out.write("   \r\n");
      out.write("   \r\n");
      out.write("\r\n");
      out.write("      </div>\r\n");
      out.write("        <div class=\"modal-footer\">\r\n");
      out.write("          <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">Close</button>\r\n");
      out.write("        </div>\r\n");
      out.write("      </div>\r\n");
      out.write("      \r\n");
      out.write("    </div>\r\n");
      out.write("  </div>\r\n");
      out.write("  \r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
