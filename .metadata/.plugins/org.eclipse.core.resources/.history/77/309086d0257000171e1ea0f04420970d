package fesdweb.data;

import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;

import com.mysql.fabric.xmlrpc.base.Array;

import fesdweb.model.Compound;
import fesdweb.model.Element;
import fesdweb.model.SpaceGroup;

public class AdvancedSearchDataService {

	public AdvancedSearchDataService()
	{
	}
	

	public ArrayList<Compound> 	SearchCompoundByOrbital( String addtionalElements,
			Boolean isShowAll, int spaceGroup, String crystalSystem,String query ) {
		
		ArrayList<Compound> compoundList = new ArrayList<Compound>();
		Connection conn = DataUtils.CreateConnection();
		
		try {
			Statement stmt = conn.createStatement();
			String compoundQuery = "Select atomicno, _cod_database_code, _chemical_formula_sum,_space_group_IT_number,_symmetry_cell_setting, id, source, _database_code_ICSD , _symmetry_space_group_name_HM from compound";
			compoundQuery =compoundQuery+ " where (showAll=1  or ((spaceGroup=0 or _space_group_it_number=spaceGroup) and (char_length(crystalSystem)=0 or _symmetry_cell_setting=crystalSystem)) )";
			String q = String.format("in (select * from partialbandstructuredata where %s) order by source desc;" , args)
			ResultSet rs = stmt.executeQuery(q);
			
		    stmt.setInt(1, atomicNo);
		    stmt.setBoolean(2, isShowAll);
		    stmt.setInt(3, spaceGroup);
		    stmt.setString(4, crystalSystem);
		    stmt.setString(5, cifId);
		    ResultSet rs = stmt.executeQuery();
			
		    
		    try {
				while (rs.next()) {
						String formula = rs.getString("_chemical_formula_sum");
						if(!IsValidForAdditionalElements(formula,addtionalElements,restrictNumberOfElements))
							continue;
						Compound c = new Compound(atomicNo, rs.getInt("_cod_database_code"),formula,  rs.getInt("_space_group_IT_number"), rs.getString("_symmetry_cell_setting"),
								rs.getString("_symmetry_space_group_name_HM"),rs.getInt("id"),rs.getString("source"),rs.getInt("_database_code_ICSD"));
						c.BSExists= DataUtils.FileExists(c.Source, c.Source.equals("cod")?c.CodID+"":c.ICSDID+"", "bs");
						c.Dos1Exists = DataUtils.FileExists(c.Source, c.Source.equals("cod")?c.CodID+"":c.ICSDID+"1", "dos");
						c.Dos2Exists = DataUtils.FileExists(c.Source, c.Source.equals("cod")?c.CodID+"":c.ICSDID+"2", "dos");
						c.Dos3Exists = DataUtils.FileExists(c.Source, c.Source.equals("cod")?c.CodID+"":c.ICSDID+"3", "dos");
						compoundList.add(c); 
				}
				rs.close();
				stmt.close();
				conn.close();
			
			} catch (Exception ex) {
				ex.printStackTrace();
				System.out.print(ex.getMessage());
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		return compoundList;
	}

	
	
	
	
}
