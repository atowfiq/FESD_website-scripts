package fesdweb.web;

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.StringWriter;
import java.nio.charset.StandardCharsets;
import java.nio.file.Files;
import java.nio.file.Paths;

import javax.servlet.ServletContext;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.tomcat.util.http.fileupload.IOUtils;

import com.google.gson.Gson;

import fesdweb.data.CompoundDataService;
import fesdweb.model.Compound;

/**
 * Servlet implementation class SingleCompoundServlet
 */
@WebServlet("/SingleCompoundServlet")
public class SingleCompoundServlet extends HttpServlet {
	private static final long serialVersionUID = 1L;
       
    /**
     * @see HttpServlet#HttpServlet()
     */
    public SingleCompoundServlet() {
        super();
        // TODO Auto-generated constructor stub
    }

	/**
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		int codId = Integer.parseInt(request.getParameter("CODId").toString());
		
		Compound c = new CompoundDataService().GetCompoud(codId);
		String cif = 				new String(Files.readAllBytes(Paths.get("E:\\fcif\\"+codId+".cif")), StandardCharsets.UTF_8).replaceAll("\"", "").replace("'", "");

		c.Cif =new String( "<script> var crystalTransformer = new ChemDoodle.TransformCanvas3D('ribbonTransformer', 400, 400);"
				+"crystalTransformer.specs.set3DRepresentation('Ball and Stick');"
			+"crystalTransformer.specs.backgroundColor = '#000000';"
			+ "crystalTransformer.specs.projectionPerspective_3D = false;"
			+"crystalTransformer.specs.crystals_unitCellLineWidth = 1.5;"
			+"crystalTransformer.specs.shapes_color = 'white'"
			+ "crystalTransformer.specs.shapes_lineWidth = 2;"
				+ "var MAZfile = '"+cif+"'"
				+"var maz = ChemDoodle.readCIF(MAZfile, 1, 1, 1);"
				+"crystalTransformer.loadContent([maz.molecule], [maz.unitCell]);</script>");
				
				

		String json = new Gson().toJson(c);

		response.setContentType("application/json");
		response.setCharacterEncoding("UTF-8");
		response.getWriter().write(json);

		
		//	response.getWriter().append("Served at: ").append(request.getContextPath());
	}

	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		doGet(request, response);
	}

}
